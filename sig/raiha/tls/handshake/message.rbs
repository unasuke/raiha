module Raiha
  module TLS
    class Handshake
      class Message
        def serialize: -> String
        def self.deserialize: (data: String, type: Integer) -> Message
      end

      class ClientHello < Message
        LEGACY_VERSION: Array[Integer]
        TLS13_SUPPORTED_VERSION: Array[Integer]

        attr_accessor random: String
        attr_accessor legacy_session_id: Integer
        attr_accessor cipher_suites: Array[CipherSuite]
        attr_accessor extensions: Array[::Raiha::TLS::Handshake::Extension]
        attr_accessor legacy_compression_methods: Array[Integer]

        def self.build: -> ClientHello
        def self.deserialize: (String data) -> ClientHello
        def extensions_for_client_hello: -> Array[::Raiha::TLS::Handshake::Extension]
        def serialize_cipher_suites: -> String
        def serialize_extensions: -> String
      end

      class ServerHello < Message
        attr_accessor random: String
        attr_accessor legacy_session_id_echo: Integer
        attr_accessor cipher_suite: CipherSuite
        attr_accessor extensions: Array[::Raiha::TLS::Handshake::Extension]
        attr_accessor legacy_compression_method: Integer

        def self.build_from_client_hello: (ClientHello client_hello) -> ServerHello
        def serialize_cipher_suite: -> String
        def serialize_extensions: -> String
      end

      class EncryptedExtensions < Message
        attr_accessor extensions: Array[::Raiha::TLS::Handshake::Extension]

        def self.deserialize: (String data) -> EncryptedExtensions
      end
    end
  end
end
