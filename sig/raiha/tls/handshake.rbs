module Raiha
  module TLS
    class Handshake
      HANDSHAKE_TYPE: Hash[Symbol, Integer]

      attr_accessor handshake_type: Integer
      attr_accessor length: Integer
      attr_accessor message: Message

      def serialize: -> String
      def self.deserialize: (String data) -> Handshake
    end

    class CipherSuite
      TLS_AES_128_GCM_SHA256: Array[Integer]
      TLS_AES_256_GCM_SHA384: Array[Integer]
      TLS_CHACHA20_POLY1305_SHA256: Array[Integer]
      TLS_AES_128_CCM_SHA256: Array[Integer]
      TLS_AES_128_CCM_8_SHA256: Array[Integer]

      @name: Symbol

      def self.deserialize: (String) -> CipherSuite
      def initialize: (Symbol) -> void
      def value: -> Array[Integer]
      def serialize: -> String
    end
  end
end
